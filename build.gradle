plugins {
    id 'java'
    id 'checkstyle'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    set('testcontainersVersion', "1.17.4")
}

checkstyle {
//    maxWarnings = 0
    configFile = file("${rootDir}/config/google-checkstyle.xml")
    toolVersion = "10.15.0"
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation group: 'it.ozimov', name: 'embedded-redis', version: '0.7.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'mysql:mysql-connector-java:8.0.32'
    implementation 'org.redisson:redisson:3.29.0'
    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation "org.testcontainers:junit-jupiter"
    testImplementation "org.testcontainers:mysql" // mysql 컨테이너를 사용한다면 추가
    testImplementation "org.testcontainers:testcontainers:1.19.7"
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}